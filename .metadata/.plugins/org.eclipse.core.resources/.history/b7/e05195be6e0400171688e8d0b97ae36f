
import org.bouncycastle.math.ec.ECCurve;
import org.bouncycastle.util.encoders.Hex;

import java.math.BigInteger;
import java.security.InvalidAlgorithmParameterException;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.SecureRandom;

import org.bouncycastle.jce.spec.ECParameterSpec;


public class Brainpool {
	public static void main(String[] args throws InvalidAlgorithmParameterException, NoSuchAlgorithmException, NoSuchProviderException{
	
		ECCurve curve = new ECCurve.Fp(
	            new BigInteger("883423532389192164791648750360308885314476597252960362792450860609699839"), // q
	            new BigInteger("7fffffffffffffffffffffff7fffffffffff8000000000007ffffffffffc", 16), // a
	            new BigInteger("6b016c3bdcf18941d0d654921475ca71a9db2fb27d1d37796185c2942c0a", 16)); // b
	ECParameterSpec ecSpec = new ECParameterSpec(
	            curve,
	            curve.decodePoint(Hex.decode("020ffa963cdca8816ccc33b8642bedf905c3d358573d3f27fbbd3b3cb9aaaf")), // G
	            new BigInteger("883423532389192164791648750360308884807550341691627752275345424702807307")); // n
	KeyPairGenerator g = KeyPairGenerator.getInstance("ECDSA", "BC");
	g.initialize(ecSpec, new SecureRandom());
	KeyPair pair = g.generateKeyPair();
	}
}
